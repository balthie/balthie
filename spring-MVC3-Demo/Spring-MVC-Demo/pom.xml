<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.balthie</groupId>
	<artifactId>Spring-MVC-Demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Spring-MVC-Demo Webapp</name>
	<url>http://maven.apache.org</url>

	<properties>
		<java-version>1.6</java-version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<org.springframework.version>4.1.3.RELEASE</org.springframework.version>
		<org.springframework.security.version>3.1.0.RELEASE</org.springframework.security.version>
		<spring.integration.version>2.0.5.RELEASE</spring.integration.version>
		<log4j.version>2.0-rc1</log4j.version>
	</properties>


	<dependencies>
		<!-- link to tomcat to get reference to servlet api -->
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>servlet-api</artifactId>
			<version>6.0.33</version>
		</dependency>


		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.9</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit-dep</artifactId>
			<version>4.9</version>
			<scope>test</scope>
		</dependency>

		<!-- Binding for Log4J -->
		<!-- log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.2</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.2</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.6.2</version>
		</dependency>

		<!-- Jackson JSON -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.4</version>
		</dependency>
		<!-- Jackson2 JSON -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.4.3</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.12.6.1</version>
		</dependency>

		<!-- Core utilities used by other modules. Define this if you use Spring 
			Utility APIs (org.springframework.core.*/org.springframework.util.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- spring4.x 已合并到core包 -->
		<!-- <dependency> <groupId>org.springframework</groupId> <artifactId>spring-asm</artifactId> 
			<version>${org.springframework.version}</version> </dependency> -->


		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define 
			this if you use Spring Bean APIs (org.springframework.beans.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, 
			spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Application Context (depends on spring-core, spring-expression, spring-aop, 
			spring-beans) This is the central artifact for Spring's Dependency Injection 
			Container and is generally always defined -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Various Application Context utilities, including EhCache, JavaMail, 
			Quartz, and Freemarker integration Define this if you need any of these integrations -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Transaction Management Abstraction (depends on spring-core, spring-beans, 
			spring-aop, spring-context) Define this if you use Spring Transactions or 
			DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, 
			spring-tx) Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, 
			and iBatis. (depends on spring-core, spring-beans, spring-context, spring-tx) 
			Define this if you need ORM (org.springframework.orm.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, 
			JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans, 
			spring-context) Define this if you need OXM (org.springframework.oxm.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Web application development utilities applicable to both Servlet and 
			Portlet Environments (depends on spring-core, spring-beans, spring-context) 
			Define this if you use Spring MVC, or wish to use Struts, JSF, or another 
			web framework with Spring (org.springframework.web.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Spring MVC for Servlet Environments (depends on spring-core, spring-beans, 
			spring-context, spring-web) Define this if you use Spring MVC with a Servlet 
			Container such as Apache Tomcat (org.springframework.web.servlet.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>


		<!-- Support for testing Spring applications with tools such as JUnit and 
			TestNG This artifact is generally always defined with a 'test' scope for 
			the integration testing framework and unit testing stubs -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${org.springframework.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- spring schedule tasks -->


		<!-- Spring Security, if you need it <dependency> <groupId>org.springframework.security</groupId> 
			<artifactId>spring-security-acl</artifactId> <version>${org.springframework.security.version}</version> 
			</dependency> <dependency> <groupId>org.springframework.security</groupId> 
			<artifactId>spring-security-core</artifactId> <version>${org.springframework.security.version}</version> 
			</dependency> <dependency> <groupId>org.springframework.security</groupId> 
			<artifactId>spring-security-crypto</artifactId> <version>${org.springframework.security.version}</version> 
			</dependency> <dependency> <groupId>org.springframework.security</groupId> 
			<artifactId>spring-security-openid</artifactId> <version>${org.springframework.security.version}</version> 
			</dependency> <dependency> <groupId>org.springframework.security</groupId> 
			<artifactId>spring-security-taglibs</artifactId> <version>${org.springframework.security.version}</version> 
			</dependency> <dependency> <groupId>org.springframework.security</groupId> 
			<artifactId>spring-security-web</artifactId> <version>${org.springframework.security.version}</version> 
			</dependency> <dependency> <groupId>org.springframework.security</groupId> 
			<artifactId>spring-security-config</artifactId> <version>${org.springframework.security.version}</version> 
			<scope>runtime</scope> </dependency> -->


		<!-- Spring Integration, if you need it <dependency> <groupId>org.springframework.integration</groupId> 
			<artifactId>spring-integration-core</artifactId> <version>${spring.integration.version}</version> 
			</dependency> <dependency> <groupId>org.springframework.integration</groupId> 
			<artifactId>spring-integration-jms</artifactId> <version>${spring.integration.version}</version> 
			</dependency> <dependency> <groupId>org.springframework.integration</groupId> 
			<artifactId>spring-integration-stream</artifactId> <version>${spring.integration.version}</version> 
			</dependency> <dependency> <groupId>org.springframework.integration</groupId> 
			<artifactId>spring-integration-mail</artifactId> <version>${spring.integration.version}</version> 
			</dependency> <dependency> <groupId>org.springframework.integration</groupId> 
			<artifactId>spring-integration-file</artifactId> <version>${spring.integration.version}</version> 
			</dependency> <dependency> <groupId>org.springframework.integration</groupId> 
			<artifactId>spring-integration-http</artifactId> <version>${spring.integration.version}</version> 
			</dependency> <dependency> <groupId>org.springframework.integration</groupId> 
			<artifactId>spring-integration-xml</artifactId> <version>${spring.integration.version}</version> 
			</dependency> <dependency> <groupId>org.springframework.integration</groupId> 
			<artifactId>spring-integration-ws</artifactId> <version>${spring.integration.version}</version> 
			</dependency> <dependency> <groupId>org.springframework.integration</groupId> 
			<artifactId>spring-integration-jdbc</artifactId> <version>${spring.integration.version}</version> 
			</dependency> <dependency> <groupId>org.springframework.integration</groupId> 
			<artifactId>spring-integration-security</artifactId> <version>${spring.integration.version}</version> 
			</dependency> <dependency> <groupId>org.springframework.integration</groupId> 
			<artifactId>spring-integration-httpinvoker</artifactId> <version>${spring.integration.version}</version> 
			</dependency> <dependency> <groupId>org.springframework.integration</groupId> 
			<artifactId>spring-integration-event</artifactId> <version>${spring.integration.version}</version> 
			</dependency> <dependency> <groupId>org.springframework.integration</groupId> 
			<artifactId>spring-integration-rmi</artifactId> <version>${spring.integration.version}</version> 
			</dependency> <dependency> <groupId>org.springframework.integration</groupId> 
			<artifactId>spring-integration-ip</artifactId> <version>${spring.integration.version}</version> 
			</dependency> <dependency> <groupId>org.springframework.integration</groupId> 
			<artifactId>spring-integration-twitter</artifactId> <version>${spring.integration.version}</version> 
			</dependency> <dependency> <groupId>org.springframework.integration</groupId> 
			<artifactId>spring-integration-xmpp</artifactId> <version>${spring.integration.version}</version> 
			</dependency> <dependency> <groupId>org.springframework.integration</groupId> 
			<artifactId>spring-integration-ftp</artifactId> <version>${spring.integration.version}</version> 
			</dependency> <dependency> <groupId>org.springframework.integration</groupId> 
			<artifactId>spring-integration-sftp</artifactId> <version>${spring.integration.version}</version> 
			</dependency> <dependency> <groupId>org.springframework.integration</groupId> 
			<artifactId>spring-integration-feed</artifactId> <version>${spring.integration.version}</version> 
			</dependency> -->

	</dependencies>
	<build>
		<finalName>Spring-MVC-Demo-0.0.1-SNAPSHOT</finalName>
		<plugins>
			<!-- test插件, 设置ClassLoader 默认执行src/test/java 下面的**Test.java文件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<!-- Minimal supported version is 2.4 -->
				<version>2.13</version>
				<configuration>
					<properties>
						<property>
							<name>listener</name>
							<value>org.sonar.java.jacoco.JUnitListener</value>
						</property>
					</properties>
					<!-- true 表示不会去执行单元测试 -->
					<skip>true</skip>
					<argLine>-Dfile.encoding=UTF-8</argLine>
				</configuration>
			</plugin>

			<!-- eclipse中的maven web项目报错：org/codehaus/plexus/archiver/jar/JarArchiver -->
			<!-- java.lang.NoClassDefFoundError: Lorg/apache/maven/archiver/MavenArchiveConfiguration; -->
			<!-- 解决“Dynamic Web Module 3.0 requires Java 1.6 or newer.”错误 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
