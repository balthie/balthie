<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		 http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:annotation-config />
	<context:component-scan base-package="org.balthie.springmvc" />

	<!-- @contrallor注解方式映射，支持配置拦截器 , 配置的拦截器继承 extends HandlerInterceptorAdapter -->
	<!-- 如果不配置，默认使用spring-web.jar 中 DispatcherServlet.properties 配置文件配置的默认Mapping -->
	<!-- 拦截器配置 -->
	<mvc:interceptors>
		<!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
		
		<bean class="org.balthie.springmvc.intercepter.ExceptionHandlerIntercepter" />
		<bean class="org.balthie.springmvc.intercepter.DemoIntercepter" />
		<bean class="org.balthie.springmvc.intercepter.IOParamsIntercepter" />
		<bean class="org.balthie.springmvc.intercepter.LongTimeLoggerIntercepter" />
		
		<!-- <mvc:interceptor>
			<mvc:mapping path="/services/*" />
			定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的
		</mvc:interceptor> -->
	</mvc:interceptors>


	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"></bean> -->


	<!-- ***** * REST API Service ****** -->
	<bean id="userService" class="org.balthie.springmvc.services.UserService"></bean>


	<!-- 默认使用的 ViewResolver ： InternalResourceViewResolver 解析JSP -->
	<!-- 根据客户提交的MimeType(如 text/html,application/xml)来跟服务端的一组viewResover的MimeType相比较,如果符合,即使用对应的viewResover处理数据视图. -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<!-- 是否忽略掉accept header，默认就是false -->
		<property name="ignoreAcceptHeader" value="false"></property>

		<!-- 这里是是否启用参数支持，默认就是true，例如 /user/{userid}?format=json -->
		<property name="favorParameter" value="true"></property>

		<!-- 这里是是否启用扩展名支持，默认就是true，例如 /user/{userid}.json -->
		<property name="favorPathExtension" value="true"></property>

		<!-- 扩展名至到mimeType的映射，例如： /user/{userid}.json 映射为 application/json -->
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
			</map>
		</property>

		<!-- 手动指定使用的 viewResolver -->
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
					<!-- spring优先级的惯例，使用order作为标准 -->
					<property name="order" value="1"></property>
				</bean>
				<bean
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
					<property name="prefix" value="/WEB-INF/view" />
					<property name="suffix" value=".jsp" />
				</bean>
			</list>
		</property>

		<property name="defaultViews">
			<!-- 默认使用json格式视图 -->
			<list>
				<bean
					class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
				</bean>
			</list>
		</property>
	</bean>
</beans>
